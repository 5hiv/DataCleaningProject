colnames(columns)
colnames(columnNam)
colnames(columnNam) = "ColumnNames"
rbind(columns,columnNam)
rbind(columnNam,columns,)
rbind(columnNam,columns)
columnNames = rbind(columnNam,columns)
extractData = merge_data[1,columnNames]
extractData = merge_data[1,columnNames[,1]]
colnames(extractData)
extractData = merge_data[1,columnNames[,1]]for ( i in 1:length(activitiesLabels[,1]))
{
extractData[extractData$ActivityId==i,]=activitiesLabels[i,2]
}
for ( i in 1:length(activitiesLabels[,1]))
{
extractData[extractData$ActivityId==i,]=activitiesLabels[i,2]
}
extractData[1:5,]
extractData[1:5,1:4]
extractData[1:5,1]
extractData[1:5,2]
extractData[1:5,1:2]
x_train <- read.table ("./train/X_train.txt",sep="")
y_train <- read.table ("./train/y_train.txt",sep="")
subject_train <- read.table ("./train/subject_train.txt",sep="")
x_test <- read.table ("./test/X_test.txt",sep="")
y_test <- read.table ("./test/y_test.txt",sep="")
subject_test <- read.table ("./test/subject_test.txt",sep="")
# Read the column names from features file
labels = read.table("features.txt")
# Assign col names to all the data read so far
colnames(subject_train) = "SubjectId"
colnames(subject_test)  = "SubjectId"
colnames(y_train) = "ActivityId"
colnames(y_test)  = "ActivityId"
colnames(x_test)  = labels[,2]
colnames(x_train) = labels[,2]
# Concatenate the subject, Activity and measurement datas for both train and test
training_data = cbind(subject_train,y_train,x_train)
test_data     = cbind(subject_test ,y_test ,x_test)
# Merge the training and test data
merge_data = rbind(training_data,test_data)
# Read the mean and median columns from the labels list
meanColumns = as.data.frame(labels[grepl("*mean*",labels[,2]),2])
stdColumns  = as.data.frame(labels[grepl("*std*",labels[,2]),2])
# In order to rbind the above list, we need to have a common column name, so name one for both
colnames(meanColumns) = "ColumnNames"
colnames(stdColumns)  = "ColumnNames"
# Concatenate the above column list for reading
columns = rbind(meanColumns,stdColumns)
temp= as.matrix(rbind("SubjectId","ActivityId"))
colnames(temp) = "ColumnNames"
columnNames= rbind(columnNam,columns)
columnNames= rbind(temp,columns)
extractData = merge_data[1,columnNames[,1]]
extractData[1:2,1:2]
extractData[1:4,1:2]
merge_data[1:4,1:2]
extractData = merge_data[,columnNames[,1]]
extractData[1:4,1:2]
for ( i in 1:length(activitiesLabels[,1]))
{
extractData[extractData$ActivityId==i,]=activitiesLabels[i,2]
}
for ( i in 1:length(activitiesLabels[,1]))
{
extractData[extractData$ActivityId==i,]=activitiesLabels[i,2]
}
activitiesLabels = read.table("activity_labels.txt")
for ( i in 1:length(activitiesLabels[,1]))
{
extractData[extractData$ActivityId==i,]=activitiesLabels[i,2]
}
extractData[1:4,1:2]
extractData = merge_data[,columnNames[,1]]
extractData[1:4,1:2]
extractData$ActivityId
for ( i in 1:length(activitiesLabels[,1]))
{
extractData[extractData$ActivityId==i,]$ActivityId=activitiesLabels[i,2]
}
extractData[1:4,1:2]
extractData[extractData$ActivityId==3,]
extractData[extractData$ActivityId==3,][1:4]
extractData[extractData$ActivityId==3,][1:4,]
extractData[extractData$ActivityId==4,][1:4,]
extractData[extractData$ActivityId==4,][1:4,1:5]
extractData[extractData$ActivityId==3,][1:4,1:5]
extractData[extractData$ActivityId==1,][1:4,1:5]
extractData[extractData$ActivityId==3,][1:4,1:5]
extractData[extractData$ActivityId==2,][1:4,1:5]
extractData[extractData$ActivityId==4,][1:4,1:5]
extractData[extractData$ActivityId==5,][1:5,1:5]
extractData[extractData$ActivityId==6,][1:5,1:5]
merge_data[merge_data$ActivityId==6,][1:5,1:5]
length(activitiesLabels[,1]
)
extractData[extractData$ActivityId==1]$ActivityId
extractData[extractData$ActivityId==1,]$ActivityId
extractData[extractData$ActivityId==4,]$ActivityId
extractData[extractData$ActivityId==2,]$ActivityId
extractData[extractData$ActivityId==3,]$ActivityId
extractData[extractData$ActivityId==4,]$ActivityId
extractData[extractData$ActivityId==5,]$ActivityId
extractData[extractData$ActivityId==6,]$ActivityId
merge_data[merge_data$ActivityId==6,]$ActivityId
for ( i in 1:length(activitiesLabels[,1]))
{
extractData[extractData$ActivityId==i,]$ActivityName=activitiesLabels[i,2]
}
extractData = merge_data[,columnNames[,1]]
merge_data[merge_data$ActivityId==6,]$ActivityId
activitiesLabels[4,2]
activitiesLabels[5,2]
activitiesLabels
activitiesLabels[1]$V2
activitiesLabels[2]$V2
activitiesLabels[2,]$V2
activitiesLabels[1,]$V2
activitiesLabels[3,]$V2
for ( i in 1:length(activitiesLabels[,1]))
{
extractData[extractData$ActivityId==i,]$ActivityId=activitiesLabels[i,]$V2
}
extractData[1:4,1:2]
extractData[extractData$ActivityId==3,]$ActivityId=activitiesLabels[3,]$V2
extractData[1:4,1:2]
extractData[extractData$ActivityId==5,]$ActivityId=activitiesLabels[5,]$V2
extractData[1:4,1:2]
extractData[1:4,1:2]
extractData[extractData$ActivityId==i,]$ActivityId
extractData[extractData$ActivityId==4]$ActivityId
extractData[,extractData$ActivityId==4]$ActivityId
extractData[extractData$ActivityId==4,]$ActivityId
extractData = merge_data[,columnNames[,1]]
extractData[extractData$ActivityId==4,]$ActivityId
extractData[,extractData$ActivityId==4]$ActivityId
extractData[extractData$ActivityId==4,]$ActivityId
extractData[extractData$ActivityId==4,]$ActivityId = 44
extractData[extractData$ActivityId==4,]$ActivityId
extractData[extractData$ActivityId==44,]$ActivityId
extractData[extractData$ActivityId==44,]$ActivityId = 4
extractData[extractData$ActivityId==4,]$ActivityId
class(extractData[extractData$ActivityId==4,]$ActivityId)
as.character(extractData[extractData$ActivityId==4,]$ActivityId) ="shiva"
as.character(extractData[extractData$ActivityId==4,]$ActivityId)
as.character(extractData[extractData$ActivityId==4,]$ActivityId) = "s"
as.character(extractData[extractData$ActivityId==4,]$ActivityId) = "a"
extractData[extractData$ActivityId==4,]$ActivityId
extractData[extractData$ActivityId==4,]$ActivityId = "S"
extractData[extractData$ActivityId==4,]$ActivityId
extractData[extractData$ActivityId==S,]$ActivityId
extractData[extractData$ActivityId=="S',]$ActivityId
extractData[extractData$ActivityId=="S',]$ActivityId
extractData[extractData$ActivityId=="S",]$ActivityId
extractData[extractData$ActivityId=="S",]$ActivityId  = "ss"
extractData[extractData$ActivityId=="ss",]$ActivityId
extractData = merge_data[,columnNames[,1]]
for ( i in 1:length(activitiesLabels[,1]))
{
extractData[extractData$ActivityId==i,]$ActivityId=activitiesLabels[i,]$V2
}
extractData[1:5,1:5]
activitiesLabels[1,]$V2
class(activitiesLabels[1,]$V2)
class(extractData[extractData$ActivityId==1,]$ActivityId)
?read.table
subject_train <- read.table ("./train/subject_train.txt",sep="",colClasses=c("character"))
subject_test <- read.table ("./test/subject_test.txt",sep="",colClasses=c("character"))
colnames(subject_train) = "SubjectId"
colnames(subject_test)  = "SubjectId"
subject_test
class(subject_test)
class(subject_test[1])
class(subject_test[1,1])
(subject_test[1,1])
training_data = cbind(subject_train,y_train,x_train)
test_data     = cbind(subject_test ,y_test ,x_test)
# Merge the training and test data
merge_data = rbind(training_data,test_data)
# Read the mean and median columns from the labels list
meanColumns = as.data.frame(labels[grepl("*mean*",labels[,2]),2])
stdColumns  = as.data.frame(labels[grepl("*std*",labels[,2]),2])
# In order to rbind the above list, we need to have a common column name, so name one for both
colnames(meanColumns) = "ColumnNames"
colnames(stdColumns)  = "ColumnNames"
# Concatenate the above column list for reading
columns = rbind(meanColumns,stdColumns)
temp= as.matrix(rbind("SubjectId","ActivityId"))
colnames(temp) = "ColumnNames"
columnNames= rbind(temp,columns)
# Extracts only the measurements on the mean and standard deviation for each measurement.
extractData = merge_data[,columnNames[,1]]
# Read the Activity names
activitiesLabels = read.table("activity_labels.txt")
# Replace the activity Id with a activity name thats read from the above file read
for ( i in 1:length(activitiesLabels[,1]))
{
extractData[extractData$ActivityId==i,]$ActivityId=activitiesLabels[i,]$V2
}
extractData[1:5,1:5]
y_train <- read.table ("./train/y_train.txt",sep="",colClasses=c("character"))
y_test <- read.table ("./test/y_test.txt",sep="",colClasses=c("character"))
labels = read.table("features.txt")
# Assign col names to all the data read so far
colnames(subject_train) = "SubjectId"
colnames(subject_test)  = "SubjectId"
colnames(y_train) = "ActivityId"
colnames(y_test)  = "ActivityId"
colnames(x_test)  = labels[,2]
colnames(x_train) = labels[,2]
# Concatenate the subject, Activity and measurement datas for both train and test
training_data = cbind(subject_train,y_train,x_train)
test_data     = cbind(subject_test ,y_test ,x_test)
# Merge the training and test data
merge_data = rbind(training_data,test_data)
# Read the mean and median columns from the labels list
meanColumns = as.data.frame(labels[grepl("*mean*",labels[,2]),2])
stdColumns  = as.data.frame(labels[grepl("*std*",labels[,2]),2])
# In order to rbind the above list, we need to have a common column name, so name one for both
colnames(meanColumns) = "ColumnNames"
colnames(stdColumns)  = "ColumnNames"
# Concatenate the above column list for reading
columns = rbind(meanColumns,stdColumns)
temp= as.matrix(rbind("SubjectId","ActivityId"))
colnames(temp) = "ColumnNames"
columnNames= rbind(temp,columns)
# Extracts only the measurements on the mean and standard deviation for each measurement.
extractData = merge_data[,columnNames[,1]]
# Read the Activity names
activitiesLabels = read.table("activity_labels.txt")
# Replace the activity Id with a activity name thats read from the above file read
for ( i in 1:length(activitiesLabels[,1]))
{
extractData[extractData$ActivityId==i,]$ActivityId=activitiesLabels[i,]$V2
}
}
extractData[1:5,1:5]
class(extractData[extractData$ActivityId==1,]$ActivityId)
class(activitiesLabels[1,]$V2)
class(activitiesLabels[1,1]$V2)
class(activitiesLabels[1,]$V2)
(activitiesLabels[1,]$V2)
(activitiesLabels[1,]$V2,)
class(activitiesLabels[1,]$V2,)
class(activitiesLabels[1,]$V2)
activitiesLabels = read.table("activity_labels.txt",colClasses=c("character"))
for ( i in 1:length(activitiesLabels[,1]))
{
extractData[extractData$ActivityId==i,]$ActivityId=activitiesLabels[i,]$V2
}
for ( i in 1:length(activitiesLabels[,1]))
{
extractData[extractData$ActivityId==i,]$ActivityId=as.character(activitiesLabels[i,]$V2)
}
activitiesLabels[i,]$V2)
activitiesLabels[i,]$V2
class(activitiesLabels[i,]$V2)
class(activitiesLabels[1,]$V2)
extractData[extractData$ActivityId==i,]$ActivityId
extractData[extractData$ActivityId==4,]$ActivityId
extractData[extractData$ActivityId==3,]$ActivityId
extractData[extractData$ActivityId=="3",]$ActivityId
extractData = merge_data[,columnNames[,1]]
extractData[extractData$ActivityId=="3",]$ActivityId
extractData[extractData$ActivityId==3,]$ActivityId
replace(extractData$ActivityId,extractData$ActivityId==3,"Walk")
extractData = merge_data[,columnNames[,1]]
for ( i in 1:length(activitiesLabels[,1]))
{
replace(extractData$ActivityId,extractData$ActivityId==i,activitiesLabels[i,]$V2)
#extractData[extractData$ActivityId==i,]$ActivityId=activitiesLabels[i,]$V2
}
extractData[1:5,1:5]
extractData[1:5,1:5]
training_data = cbind(subject_train,y_train,x_train)
test_data     = cbind(subject_test ,y_test ,x_test)
# Merge the training and test data
merge_data = rbind(training_data,test_data)
# Read the mean and median columns from the labels list
meanColumns = as.data.frame(labels[grepl("*mean*",labels[,2]),2])
stdColumns  = as.data.frame(labels[grepl("*std*",labels[,2]),2])
# In order to rbind the above list, we need to have a common column name, so name one for both
colnames(meanColumns) = "ColumnNames"
colnames(stdColumns)  = "ColumnNames"
# Concatenate the above column list for reading
columns = rbind(meanColumns,stdColumns)
temp= as.matrix(rbind("SubjectId","ActivityId"))
colnames(temp) = "ColumnNames"
columnNames= rbind(temp,columns)
# Extracts only the measurements on the mean and standard deviation for each measurement.
extractData = merge_data[,columnNames[,1]]
# Read the Activity names
activitiesLabels = read.table("activity_labels.txt",colClasses=c("character"))
# Replace the activity Id with a activity name thats read from the above file read
for ( i in 1:length(activitiesLabels[,1]))
{
replace(extractData$ActivityId,extractData$ActivityId==i,activitiesLabels[i,]$V2)
#extractData[extractData$ActivityId==i,]$ActivityId=activitiesLabels[i,]$V2
}
}
extractData[1:5,1:5]
merge_data[1:5,1:5]
?gsub
extractData[1:5,1:5]
gsub("1","Walk",extractData$SubjectId)
dd = gsub("1","Walk",extractData$SubjectId)
dd[1:5,]
dd[1:5]
dd[1:5,1:5]
dd[1:5,1:5]
extractData$SubjectId = gsub("1","Walk",extractData$SubjectId)
dd[1:5,1:5]
extractData[1:5,1:5]
extractData[1:8,1:5]
extractData[1:15,1:5]
extractData[1:150,1:5]$ActivityId
extractData$ActivityId = gsub("1","Walk",extractData$SubjectId)
extractData = merge_data[,columnNames[,1]]
activitiesLabels = read.table("activity_labels.txt",colClasses=c("character"))
extractData$ActivityId = gsub("1","Walk",extractData$ActivityId)
extractData[1:150,1:5]$ActivityId
for ( i in 1:length(activitiesLabels[,1]))
{
extractData$ActivityId = gsub(i,activitiesLabels[i,]$V2,,extractData$ActivityId)
#replace(extractData$ActivityId,extractData$ActivityId==i,activitiesLabels[i,]$V2)
#extractData[extractData$ActivityId==i,]$ActivityId=activitiesLabels[i,]$V2
}
for ( i in 1:length(activitiesLabels[,1]))
{
extractData$ActivityId = gsub(i,activitiesLabels[i,]$V2,extractData$ActivityId)
#replace(extractData$ActivityId,extractData$ActivityId==i,activitiesLabels[i,]$V2)
#extractData[extractData$ActivityId==i,]$ActivityId=activitiesLabels[i,]$V2
}
extractData[1:150,1:5]$ActivityId
extractData = merge_data[,columnNames[,1]]
for ( i in 1:length(activitiesLabels[,1]))
{
extractData$ActivityId = gsub(i,activitiesLabels[i,]$V2,extractData$ActivityId)
#replace(extractData$ActivityId,extractData$ActivityId==i,activitiesLabels[i,]$V2)
#extractData[extractData$ActivityId==i,]$ActivityId=activitiesLabels[i,]$V2
}
extractData[1:150,1:5]$ActivityId
mergeData[1:150,1:5]$ActivityId
merge_data[1:150,1:5]$ActivityId
ddply(extractData,~ActivityId,summarise,mean=mean(age))
install.packages("ply")
install.packages("plyr")
install.packages("plyr")
ddply(extractData,~ActivityId,summarise,mean=mean(age))
?ddply
install.packages("ddplly")
install.packages("ddply")
library(ply)
library(dply)
library(plyr)
ddply(extractData,~ActivityId,summarise,mean=mean(age))
?aggregate
extractData[,lapply(mean),by=ActivityId]
extractData[,lapply(mean),by=extractData$ActivityId]
source('C:/0 - Sivaraj/R/Assignment/Data Cleaning/UCI HAR Dataset/run_analysis.R', echo=TRUE)
data(mtcars)
mtcars
narrow <- mtcars[, c("cyl", "gear", "vs", "mpg")]
narrow
extractData[1:5,1:5]
merge_data[1:5,1:5]
merge_data = rbind(training_data,test_data)
# Read the mean and median columns from the labels list
meanColumns = as.data.frame(labels[grepl("*mean*",labels[,2]),2])
stdColumns  = as.data.frame(labels[grepl("*std*",labels[,2]),2])
# In order to rbind the above list, we need to have a common column name, so name one for both
colnames(meanColumns) = "ColumnNames"
colnames(stdColumns)  = "ColumnNames"
# Concatenate the above column list for reading
columns = rbind(meanColumns,stdColumns)
temp= as.matrix(rbind("SubjectId","ActivityId"))
colnames(temp) = "ColumnNames"
columnNames= rbind(temp,columns)
# Extracts only the measurements on the mean and standard deviation for each measurement.
extractData = merge_data[,columnNames[,1]]
# Read the Activity names
activitiesLabels = read.table("activity_labels.txt",colClasses=c("character"))
# Replace the activity Id with a activity name thats read from the above file read
for ( i in 1:length(activitiesLabels[,1]))
{
$ActivityId = gsub(i,activitiesLabels[i,]$V2,,extractData$ActivityId)
#replace(extractData$ActivityId,extractData$ActivityId==i,activitiesLabels[i,]$V2)
#extractData[extractData$ActivityId==i,]$ActivityId=activitiesLabels[i,]$V2
}
for ( i in 1:length(activitiesLabels[,1]))
{
ActivityId = gsub(i,activitiesLabels[i,]$V2,,extractData$ActivityId)
#replace(extractData$ActivityId,extractData$ActivityId==i,activitiesLabels[i,]$V2)
#extractData[extractData$ActivityId==i,]$ActivityId=activitiesLabels[i,]$V2
}
for ( i in 1:length(activitiesLabels[,1]))
{
extractData$ActivityId = gsub(i,activitiesLabels[i,]$V2,extractData$ActivityId)
#replace(extractData$ActivityId,extractData$ActivityId==i,activitiesLabels[i,]$V2)
#extractData[extractData$ActivityId==i,]$ActivityId=activitiesLabels[i,]$V2
}
extractData[1:5,1:5]
class(extractData)
extractData.table = data.table("extractData")
library(data.table)
extractData.table = data.table("extractData")
extractData[, lapply(.SD,mean), by=eval(colnames(extractData)[3:10])]
ncols(extractData)
collength(extractData)
colength(extractData)
columnlen(extractData)
extractData[, lapply(.SD,mean), by=eval(extractData)[1:2]]
extractData[, lapply(.SD,mean), by=eval(extractData[1:2]]
extractData[, lapply(.SD,mean), by=eval(extractData[1:2])]
extractData[, lapply(.SD,mean), by=colnames(extractData[1:2])]
extractData[1:2]
colnames(extractData[1:2])
extractData[, lapply(.SD,mean), by=eval(colnames(extractData[1:2]))]
eval(colnames(extractData[1:2]))
extractData[, lapply(.SD,mean), by=eval(colnames(extractData[1:2]))]
extractData.table[, lapply(.SD,mean), by=eval(colnames(extractData.table[1:2]))]
extractData.table
df = data.table("extractData")
df
df = data.table(extractData)
df
extractData.table = data.table(extractData)
extractData.table[, lapply(.SD,mean), by=eval(colnames(extractData.table[1:2]))]
extractData.table[, lapply(.SD,mean), by=colnames(extractData.table[1:2])]
extractData.table[, lapply(.SD,mean), by=eval(colnames(extractData.table[1:2]))]
eval(colnames(extractData.table[1:2]))
eval(colnames(extractData.table[1:2,]))
eval(colnames(extractData.table[,1:2]))
(colnames(extractData.table)[1:2])
extractData.table[, lapply(.SD,mean), by=eval(colnames(extractData.table)[1:2])]
source("run_analysis.r")
analysis()
write(extractData.table, file = "tidayData.csv", sep = " ")
data = extractData.table[, lapply(.SD,mean), by=eval(colnames(extractData.table)[1:2])]
write(extractData.table, file = "tidayData.csv", sep = " ")
source("run_analysis.r")
analysis()
x_train <- read.table ("./train/X_train.txt",sep="")
y_train <- read.table ("./train/y_train.txt",sep="",colClasses=c("character"))
subject_train <- read.table ("./train/subject_train.txt",sep="",colClasses=c("character"))
x_test <- read.table ("./test/X_test.txt",sep="")
y_test <- read.table ("./test/y_test.txt",sep="",colClasses=c("character"))
subject_test <- read.table ("./test/subject_test.txt",sep="",colClasses=c("character"))
# Read the column names from features file
labels = read.table("features.txt")
# Assign col names to all the data read so far
colnames(subject_train) = "SubjectId"
colnames(subject_test)  = "SubjectId"
colnames(y_train) = "ActivityId"
colnames(y_test)  = "ActivityId"
colnames(x_test)  = labels[,2]
colnames(x_train) = labels[,2]
# Concatenate the subject, Activity and measurement datas for both train and test
training_data = cbind(subject_train,y_train,x_train)
test_data     = cbind(subject_test ,y_test ,x_test)
# Merge the training and test data
merge_data = rbind(training_data,test_data)
# Read the mean and median columns from the labels list
meanColumns = as.data.frame(labels[grepl("*mean*",labels[,2]),2])
stdColumns  = as.data.frame(labels[grepl("*std*",labels[,2]),2])
# In order to rbind the above list, we need to have a common column name, so name one for both
colnames(meanColumns) = "ColumnNames"
colnames(stdColumns)  = "ColumnNames"
# Concatenate the above column list for reading
columns = rbind(meanColumns,stdColumns)
temp= as.matrix(rbind("SubjectId","ActivityId"))
colnames(temp) = "ColumnNames"
columnNames= rbind(temp,columns)
# Extracts only the measurements on the mean and standard deviation for each measurement.
extractData = merge_data[,columnNames[,1]]
# Read the Activity names
activitiesLabels = read.table("activity_labels.txt",colClasses=c("character"))
# Replace the activity Id with a activity name thats read from the above file read
for ( i in 1:length(activitiesLabels[,1]))
{
extractData$ActivityId = gsub(i,activitiesLabels[i,]$V2,extractData$ActivityId)
#replace(extractData$ActivityId,extractData$ActivityId==i,activitiesLabels[i,]$V2)
#extractData[extractData$ActivityId==i,]$ActivityId=activitiesLabels[i,]$V2
}
# Convert the data frame into a data table
extractData.table = data.table(extractData)
# Creates a second, independent tidy data set with the average of each variable for each activity and each subject.
data = extractData.table[, lapply(.SD,mean), by=eval(colnames(extractData.table)[1:2])]
# Write the tidy data into a file
write(data, file = "tidayData.csv", sep = " ")
write(data, file = "tidayData.csv", ncolumns = length(colnames(data),sep = " ")
)
length(colnames(data)
)
write(data, file = "tidayData.csv", ncolumns = length(colnames(data)),sep = " ")
write(as.data.frame(data), file = "tidayData.csv", ncolumns = length(colnames(data)),sep = " ")
class(data)
write(as.data.frame(data), file = "tidayData.csv", ncolumns = length(colnames(data)),append = FALSE, sep = " ")
write(as.data.frame(data), file = "tidayData.csv", ncolumns = length(colnames(data)),append = FALSE, sep = "")
data2 = as.data.frame(data)
write(data2, file = "tidayData.csv", ncolumns = length(colnames(data)),sep = " ")
write.table(data2, file = "tidayData.csv", ncolumns = length(colnames(data)),sep = " ")
write.table(data2, file = "tidayData.csv",sep = " ")
colnames(data)
write.table(data2, file = "tidayData.csv",sep = ",")
data[1:5,1:5]
data2[1:5,1:5]
?write.table
write.table(data2, file = "tidayData.csv",sep = ",",row.names=FALSE)
write.table(data2, file = "tidayData.csv",sep = ",",row.names=FALSE)
